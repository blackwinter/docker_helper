var search_data = {"index":{"searchIndex":["dockerhelper","proxy","version","build_args()","docker()","docker_build()","docker_clean()","docker_clobber()","docker_command()","docker_container_name()","docker_fail()","docker_image_name()","docker_pipe()","docker_reset()","docker_restart()","docker_start()","docker_start!()","docker_stop()","docker_system()","docker_tags()","docker_url()","docker_version()","docker_volume()","extract_options()","find_docker_command()","method_missing()","new()","prefix_method()","proxy()","respond_to_missing?()","to_a()","to_s()","copying","changelog","readme"],"longSearchIndex":["dockerhelper","dockerhelper::proxy","dockerhelper::version","dockerhelper#build_args()","dockerhelper#docker()","dockerhelper#docker_build()","dockerhelper#docker_clean()","dockerhelper#docker_clobber()","dockerhelper#docker_command()","dockerhelper#docker_container_name()","dockerhelper#docker_fail()","dockerhelper#docker_image_name()","dockerhelper#docker_pipe()","dockerhelper#docker_reset()","dockerhelper#docker_restart()","dockerhelper#docker_start()","dockerhelper#docker_start!()","dockerhelper#docker_stop()","dockerhelper#docker_system()","dockerhelper#docker_tags()","dockerhelper#docker_url()","dockerhelper#docker_version()","dockerhelper#docker_volume()","dockerhelper#extract_options()","dockerhelper#find_docker_command()","dockerhelper::proxy#method_missing()","dockerhelper::proxy::new()","dockerhelper::proxy#prefix_method()","dockerhelper#proxy()","dockerhelper::proxy#respond_to_missing?()","dockerhelper::version#to_a()","dockerhelper::version#to_s()","","",""],"info":[["DockerHelper","","DockerHelper.html","","<p>Various helper methods to control the Docker command-line client. Main\nentrance point is the #docker …\n"],["DockerHelper::Proxy","","DockerHelper/Proxy.html","","<p>Generic proxy class that allows to call prefixed methods with or without\nthat prefix via #method_missing …\n"],["DockerHelper::Version","","DockerHelper/Version.html","",""],["build_args","DockerHelper","DockerHelper.html#method-i-build_args","(args, options)","<p>Builds arguments array suitable for #docker_system and #docker_pipe.\n<p>Prefixes the command with <code>sudo</code> unless …\n"],["docker","DockerHelper","DockerHelper.html#method-i-docker","(*args, &block)","<p>Central helper method to execute Docker commands.\n<p>If the command (first argument) is a symbol or if the …\n"],["docker_build","DockerHelper","DockerHelper.html#method-i-docker_build","(build_path, image = nil)","<p>Builds the image <code>image</code> from the Dockerfile and context at\n<code>build_path</code>.\n<p>Command reference: docker build …\n"],["docker_clean","DockerHelper","DockerHelper.html#method-i-docker_clean","(name = nil, _ = nil)","<p>Stops and then removes container <code>name</code>, including associated\nvolumes.\n<p>Command reference: docker rm\n"],["docker_clobber","DockerHelper","DockerHelper.html#method-i-docker_clobber","(name = nil, image = nil)","<p>Removes container <code>name</code> (see #docker_clean) as well as image\n<code>image</code>.\n<p>Command reference: docker rmi\n"],["docker_command","DockerHelper","DockerHelper.html#method-i-docker_command","()","<p>Returns the Docker command or aborts if none could be found.\n<p>Override by setting the <code>DOCKER_COMMAND</code> environment …\n"],["docker_container_name","DockerHelper","DockerHelper.html#method-i-docker_container_name","()","<p>Placeholder for default container name; must be implemented by utilizing\nclass.\n"],["docker_fail","DockerHelper","DockerHelper.html#method-i-docker_fail","(*args)","<p>Simply aborts; override for different behaviour.\n"],["docker_image_name","DockerHelper","DockerHelper.html#method-i-docker_image_name","()","<p>Placeholder for default image name; must be implemented by utilizing class.\n"],["docker_pipe","DockerHelper","DockerHelper.html#method-i-docker_pipe","(*args)","<p>Executes the command in a subprocess and returns its output as a string, or\n<code>nil</code> if output is empty; override …\n"],["docker_reset","DockerHelper","DockerHelper.html#method-i-docker_reset","(name = nil, image = nil)","<p>Resets container <code>name</code> by removing (see #docker_clean) and then\nstarting (see #docker_start) it from image …\n"],["docker_restart","DockerHelper","DockerHelper.html#method-i-docker_restart","(name = nil, _ = nil)","<p>Restarts container <code>name</code> by stopping (see #docker_stop) and\nthen starting it.\n<p>Command reference: docker …\n"],["docker_start","DockerHelper","DockerHelper.html#method-i-docker_start","(name = nil, image = nil)","<p>Starts container <code>name</code> from image <code>image</code>. This will\nfail if a container with that name is already running. …\n"],["docker_start!","DockerHelper","DockerHelper.html#method-i-docker_start-21","(name = nil, image = nil)","<p>Unconditionally starts container <code>name</code> from image\n<code>image</code>.\n<p>If the container is already running, it&#39;s …\n"],["docker_stop","DockerHelper","DockerHelper.html#method-i-docker_stop","(name = nil, _ = nil)","<p>Stops container <code>name</code>.\n<p>Command reference: docker stop\n"],["docker_system","DockerHelper","DockerHelper.html#method-i-docker_system","(*args)","<p>Executes the command in a subshell; override for different behaviour.\n"],["docker_tags","DockerHelper","DockerHelper.html#method-i-docker_tags","(image = nil)","<p>Returns the tags associated with image <code>image</code>.\n<p>Command reference: docker images\n"],["docker_url","DockerHelper","DockerHelper.html#method-i-docker_url","(port, name = nil)","<p>Returns the HTTP URL for container <code>name</code> on port\n<code>port</code>. Fails if container is not running or the specified …\n"],["docker_version","DockerHelper","DockerHelper.html#method-i-docker_version","()","<p>Returns the version number of the Docker client.\n<p>Command reference: docker version\n"],["docker_volume","DockerHelper","DockerHelper.html#method-i-docker_volume","(volume, name = nil)","<p>Returns the path to volume <code>volume</code> shared by container\n<code>name</code>.\n<p>Command reference: docker inspect\n"],["extract_options","DockerHelper","DockerHelper.html#method-i-extract_options","(args, *keys)","<p>Extracts options hash from <code>args</code> and applies default options.\n<p>Returns the options hash as well as the values …\n"],["find_docker_command","DockerHelper","DockerHelper.html#method-i-find_docker_command","()","<p>Tries to find the Docker command for the host system. Usually, it&#39;s\njust <code>docker</code>, but on Debian-based …\n"],["method_missing","DockerHelper::Proxy","DockerHelper/Proxy.html#method-i-method_missing","(method, *args, &block)",""],["new","DockerHelper::Proxy","DockerHelper/Proxy.html#method-c-new","(prefix = 'docker')",""],["prefix_method","DockerHelper::Proxy","DockerHelper/Proxy.html#method-i-prefix_method","(method)",""],["proxy","DockerHelper","DockerHelper.html#method-i-proxy","()","<p>Returns a new instance of Proxy with helper methods available both in\nabbreviated and unabbreviated form. …\n"],["respond_to_missing?","DockerHelper::Proxy","DockerHelper/Proxy.html#method-i-respond_to_missing-3F","(method, _ = false)",""],["to_a","DockerHelper::Version","DockerHelper/Version.html#method-i-to_a","()","<p>Returns array representation.\n"],["to_s","DockerHelper::Version","DockerHelper/Version.html#method-i-to_s","()","<p>Short-cut for version string.\n"],["COPYING","","COPYING.html","","<p>License for docker_helper\n\n<pre>                    GNU AFFERO GENERAL PUBLIC LICENSE\n                      ...</pre>\n"],["ChangeLog","","ChangeLog.html","","<p>Revision history for docker_helper\n<p>0.0.1 [2014-08-05]\n<p>First release.\n"],["README","","README.html","","<p>docker_helper - Helper methods to interact with Docker\n<p>VERSION\n<p>This documentation refers to docker_helper …\n"]]}}